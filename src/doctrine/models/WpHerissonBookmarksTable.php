<?php

/**
 * WpHerissonBookmarksTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class WpHerissonBookmarksTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object WpHerissonBookmarksTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('WpHerissonBookmarks');
    }

    public static function checkDuplicate($url)
    {

        $bookmarks = self::getWhere("hash='".md5($url)."'");
        if (sizeof($bookmarks)) {
            return true;
        }
        return false;
    }

    public static function createBookmark($url,$options=array()) {

        if (self::checkDuplicate($url)) {
           echo "Ignoring duplicate entry : $url<br>";
        }
        $bookmark = new WpHerissonBookmarks();
        $bookmark->url = $url;
        if (sizeof($options)) {
            if (array_key_exists('favicon_url',$options) && $options['favicon_url']) {
                $bookmark->favicon_url = $options['favicon_url'];
            }
            if (array_key_exists('favicon_image',$options) && $options['favicon_image']) {
                $bookmark->favicon_image = $options['favicon_image'];
            }
            if (array_key_exists('title',$options) && $options['title']) {
                $bookmark->title = $options['title'];
            }
        }
        $bookmark->save();
        if (array_key_exists('tags',$options) && $options['tags']) {
            $bookmark->setTags($options['tags']);
        }
    }

    public static function get($id)
    {
        if (!is_numeric($id)) {
            return new WpHerissonBookmarks();
        }
        $bookmarks = Doctrine_Query::create()
            ->from('WpHerissonBookmarks')
            ->where("id=?")
            ->execute(array($id));
        foreach ($bookmarks as $bookmark) {
            return $bookmark;
        }
        return new WpHerissonBookmarks();
    }

    public static function getAll()
    {
        return self::getWhere("1=1");
    }

    public static function getWhere($where)
    {
        $pagination = pagination_get_vars();
        $bookmarks = Doctrine_Query::create()
            ->from('WpHerissonBookmarks')
            ->where($where)
            ->limit($pagination['limit'])
            ->offset($pagination['offset'])
            ->execute();
        return $bookmarks;
    }

    public static function getTag($tag)
    {
         $bookmarks = Doctrine_Query::create()
          ->from('WpHerissonBookmarks b')
          ->leftJoin('b.WpHerissonTags t')
          ->where("name= ?",$tag)
          ->execute();
         return $bookmarks;
    }


}
